{"version":3,"sources":["services/users.services.js","pages/components/edit-user-form.js","pages/users.js","App.js","reportWebVitals.js","index.js"],"names":["updateUser","data","params","method","headers","body","JSON","stringify","fetch","then","response","status","json","code","message","catch","err","EditUserForm","rowData","setRowData","state","setState","fecha_actualizacion","moment","Date","format","useState","userData","setUserData","active","setActive","nombres","usuario_id","segundo_apellido","telefono_laboral","password_asterisk","usuario_login","primer_apellido","email_laboral","extension_asterisk","codigo_estado","useForm","register","handleSubmit","errors","reset","useEffect","onSubmit","a","dataTemp","accion","console","log","old","reload","Form","onChange","Row","Col","lg","InputGroup","size","className","Prepend","Text","id","FormControl","aria-label","aria-describedby","defaultValue","name","ref","disabled","maxLength","value","style","color","marginBottom","fontSize","Button","variant","type","block","onClick","Users","loading","dataUsers","setDataUsers","users","getUsersData","Card","Body","dataSource","rowSelected","toolbar","searchSettings","fields","field","headerText","width","headerTextAlign","textAlign","columns","services","Toolbar","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28efe851.chunk.js","sourcesContent":["export function getUsers() {\n    const url = `https://app.crmetric.com/srv-crmetric-web/rest/usuario/listarUsuarioxnombre`;\n\n    const params = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body:{\n          \"name\":\"mar\"\n        }\n      };\n\n    return fetch(url, params)\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => {\n      return err;\n    });\n}\n\nexport function updateUser(data) {\n    const url = `https://app.crmetric.com/srv-crmetric-web/rest/usuario/registrarUsuario`;\n  \n    const params = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      };\n\n    return fetch(url, params)\n    .then((response) => {\n      if ((response.status >= 200) & (response.status < 300)) {\n        return response.json();\n      }\n      return {\n        code: 404,\n        message: \"Ocurrio un error al guardar los datos\",\n      };\n    })\n    .catch((err) => {\n      return err;\n    });\n}","import React, { useState, useEffect } from 'react'\nimport { Form, Button, Row, Col, InputGroup, FormControl } from \"react-bootstrap\"\nimport { useForm } from \"react-hook-form\";\nimport moment from 'moment';\nimport {updateUser} from \"../../services/users.services\"\n\nexport const EditUserForm = ({ rowData, setRowData, state, setState }) => {\n\n    let fecha_actualizacion = moment(new Date()).format(\"YYYY-MM-DD h:mm:ss\");\n    const [userData, setUserData] = useState({})\n    const [active, setActive] = useState(false)\n    const { nombres, usuario_id, segundo_apellido, telefono_laboral, password_asterisk, usuario_login, primer_apellido, email_laboral, extension_asterisk, codigo_estado } = userData || {}\n    const { register, handleSubmit, errors, reset } = useForm();\n\n    useEffect(() => {\n        setActive(false)\n        reset()\n        setUserData(rowData.data)\n    }, [rowData.data, reset])\n\n    const onSubmit = async data => {\n        const dataTemp = { ...userData, ...data, fecha_actualizacion, accion: \"Actualizar\", segundo_apellido: data.segundo_apellido, usuario_id, usuario_login  }\n        console.log(dataTemp)\n        try {\n            await updateUser(dataTemp)\n            setState(old => ({...old, reload: !state.reload}))\n        } catch (error) {\n            console.log(error)\n        }\n    };\n\n    const onChange = () => {\n        setActive(true)\n    }\n\n    const cancelar = () => {\n        setActive(false)\n        setUserData({})\n        setRowData({})\n        reset()\n    }\n\n    return (\n        <Form onSubmit={handleSubmit(onSubmit)} onChange={onChange} >\n            <Row>\n                <Col lg=\"6\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroup-sizing-sm\">Id</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl aria-label=\"Id\" aria-describedby=\"inputGroup-sizing-sm\" defaultValue={usuario_id} name=\"usuario_id\" ref={register} disabled />\n                    </InputGroup>\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroup-sizing-sm\">Nombres</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl aria-label=\"Nombres\" aria-describedby=\"inputGroup-sizing-sm\" defaultValue={nombres} name=\"nombres\" ref={register({ maxLength: { value: 50, message: \"Solo permite 50 caracteres.\" } })} />\n                    </InputGroup>\n                    {errors.nombres && <span style={{color: \"red\", marginBottom: \"16px\", fontSize: \"15px\"}}>{errors.nombres.message}</span>}\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroup-sizing-sm\">Seg. Apellido</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl aria-label=\"Seg. Apellido\" aria-describedby=\"inputGroup-sizing-sm\" defaultValue={segundo_apellido} name=\"segundo_apellido\" ref={register({ maxLength: { value: 50, message: \"Solo permite 50 caracteres.\" } })} />\n                    </InputGroup>\n                    {errors.segundo_apellido && <span style={{color: \"red\", marginBottom: \"16px\", fontSize: \"15px\"}}>{errors.segundo_apellido.message}</span>}\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroup-sizing-sm\">Teléfono laboral</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl aria-label=\"Teléfono laboral\" aria-describedby=\"inputGroup-sizing-sm\" defaultValue={telefono_laboral} name=\"telefono_laboral\" ref={register} />\n                    </InputGroup>\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroup-sizing-sm\">Contraseña ext.</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl aria-label=\"Contraseña ext.\" aria-describedby=\"inputGroup-sizing-sm\" defaultValue={password_asterisk} name=\"password_asterisk\" ref={register({ maxLength: { value: 32, message: \"Solo permite 32 caracteres.\" } })} />\n                    </InputGroup>\n                        {errors.password_asterisk && <span style={{color: \"red\", marginBottom: \"16px\", fontSize: \"15px\"}}>{errors.password_asterisk.message}</span>}\n                </Col>\n                <Col lg=\"6\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroup-sizing-sm\">Login</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl aria-label=\"Login\" aria-describedby=\"inputGroup-sizing-sm\" defaultValue={usuario_login} name=\"usuario_login\" ref={register}  disabled/>\n                    </InputGroup>\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroup-sizing-sm\">Primer apellido</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl aria-label=\"Primer apellido\" aria-describedby=\"inputGroup-sizing-sm\" defaultValue={primer_apellido} name=\"primer_apellido\" ref={register({ maxLength: { value: 50, message: \"Solo permite 50 caracteres.\" } })} />\n                    </InputGroup>\n                    {errors.primer_apellido && <span style={{color: \"red\", marginBottom: \"16px\", fontSize: \"15px\"}}>{errors.primer_apellido.message}</span>}\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroup-sizing-sm\">eMail laboral:</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl aria-label=\"eMail laboral:\" aria-describedby=\"inputGroup-sizing-sm\" defaultValue={email_laboral} name=\"email_laboral\" ref={register} />\n                    </InputGroup>\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroup-sizing-sm\">Extensión:</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl aria-label=\"Extensión:\" aria-describedby=\"inputGroup-sizing-sm\" defaultValue={extension_asterisk} name=\"extension_asterisk\" ref={register} />\n                    </InputGroup>\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroup-sizing-sm\">Estado:</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" defaultValue={codigo_estado} name=\"codigo_estado\" ref={register} />\n                    </InputGroup>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <Button variant=\"outline-warning\" type=\"submit\" disabled={!active} block >\n                        Actualizar\n                    </Button>\n                </Col>\n                <Col>\n                    <Button variant=\"danger\" type=\"button\" onClick={cancelar} disabled={rowData.data ? false : true} block >\n                        Cancelar\n                    </Button>\n                </Col>\n            </Row>\n        </Form>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { GridComponent, ColumnsDirective, ColumnDirective, Inject } from '@syncfusion/ej2-react-grids';\nimport { Toolbar} from '@syncfusion/ej2-react-grids';\nimport { getUsers } from \"../services/users.services\"\nimport { EditUserForm } from \"./components/edit-user-form\"\nimport { Card } from \"react-bootstrap\"\n\nconst Users = () => {\n\n    let searchSettings = { fields: ['nombres', 'primer_apellido', 'segundo_apellido'] }\n    const [state, setState] = useState({\n        reload: false,\n        loading: false\n    })\n    const [dataUsers, setDataUsers] = useState([])\n\n    useEffect(() => {\n        setState(old => ({ ...old, loading: true }))\n        const getUsersData = async () => {\n            try {\n                const users = await getUsers()\n                setDataUsers(users.data)\n                setState(old => ({ ...old, loading: false }))\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        getUsersData()\n    }, [state.reload])\n\n    const columnaApellidos = [\n        {\n            field: 'primer_apellido',\n            headerText: 'Apellido Paterno',\n            width: '30%',\n            headerTextAlign: 'Center'\n        },\n        {\n            field: 'segundo_apellido',\n            headerText: 'Apellido Materno',\n            width: '30%',\n            headerTextAlign: 'Center'\n        }\n    ]\n\n    const [rowData, setRowData] = useState({});\n\n    return (\n\n        <Card className=\"mt-3\">\n            <Card.Body>\n                <GridComponent\n                    dataSource={dataUsers}\n                    className='table'\n                    rowSelected={setRowData}\n                    toolbar={['Search']}\n                    searchSettings={searchSettings}>\n                    <ColumnsDirective>\n                        <ColumnDirective field='usuario_id' headerText='Id' width='20%' headerTextAlign='Center' textAlign='Center' />\n                        <ColumnDirective field='usuario_login' headerText='Login' width='25%' headerTextAlign='Center' />\n                        <ColumnDirective field='nombres' headerText='Nombres' width='30%' headerTextAlign='Center' />\n                        <ColumnDirective columns={columnaApellidos} headerText='Apellidos' width='40%' headerTextAlign='Center' />\n                        <ColumnDirective field='codigo_estado' headerText='Estado' width='15%' headerTextAlign='Center' />\n                        <ColumnDirective field='fecha_actualizacion' headerText='Actualizacion' width='25%' headerTextAlign='Center' />\n                    </ColumnsDirective>\n                    <Inject services={[Toolbar]} />\n                </GridComponent>\n\n                <EditUserForm rowData={rowData} setRowData={setRowData} state={state} setState={setState} />\n            </Card.Body>\n        </Card >\n    )\n}\n\nexport default Users\n","import './App.css';\nimport Users from \"./pages/users\"\nimport { Container } from \"react-bootstrap\"\n\nfunction App() {\n  return (\n    <Container>\n      <Users />\n    </Container>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}